name: Publish Existing Draft Release

on:
  push:
    tags:
      - '*' # Trigger on any tag
  workflow_dispatch:

permissions:
  contents: write # Allow reading repository contents (including releases)

jobs:
  publish-draft-release:
    runs-on: ubuntu-latest

    steps:
      # Use the GitHub Script Action to find and publish the draft release
      - name: Publish Draft Release
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tagName = context.ref.split('/').pop(); // Extract the tag name

            // Fetch releases to find the draft release for the tag
            const releases = await github.rest.repos.listReleases({
              owner,
              repo,
            });

            // Filter for draft releases
            const draftRelease = releases.data.filter(release => release.draft);

            if (!draftRelease) {
              core.setFailed(`No draft release found for tag: ${tagName}`);
              return;
            }

            const id = draftRelease[0].id;
            const body = draftRelease[0].body;
            let image = "\nDocker image: ghcr.io/${owner}/${repo}:${tagName}";

            // Publish the draft release
            await github.rest.repos.updateRelease({
              owner,
              repo,
              release_id: id,
              draft: false, // Set draft to false to publish it,
              tag_name: tagName,
              name: `${repo} ${tagName}`,
              body: body + image
            });

            console.log(`Draft release for tag ${tagName} has been published.`);